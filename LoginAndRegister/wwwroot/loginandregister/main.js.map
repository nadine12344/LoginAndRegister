{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/dataService.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from './shared/dataService';\r\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\r\n  _listFilter = '';\r\n  products: any[]=[];\n  filtered: any[] = this.products;\r\n  get listFilter(): string {\r\n    return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n    this._listFilter = value;\r\n    this.filtered = this.listFilter ? this.performFilter(this.listFilter) : this.products;\r\n  }\n  performFilter(filterBy: string): any[] {\r\n    filterBy = filterBy.toLocaleLowerCase();\r\n    return this.products.filter((product) =>\r\n      product.roles.some(e => e.toLocaleLowerCase().indexOf(filterBy) !== -1));\r\n  }\n  constructor(private data: DataService) {\n    \r\n  }\n  ngOnInit(): void {\r\n\r\n      this.data.loadProducts().subscribe(success => {\r\n        if (success) {\r\n          this.products = this.data.products;\r\n          this.filtered = this.products;\r\n\r\n        }\r\n        });\r\n    }\r\n  title = 'client';\n}\n","\r\n<h1>Dashboard</h1>\r\n<input type='text' [(ngModel)]='listFilter' matInput placeholder=\"Search for a role\">\r\n<table class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th>First Name</th>\r\n      <th>Email</th>\r\n      <th>Roles</th>\r\n\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n\r\n\r\n    <tr *ngFor=\"let el of filtered\">\r\n      <td>{{el.firstName}}</td>\r\n      <td>{{el.email}}</td>\r\n      <td *ngFor=\"let role of el.roles\">{{role}}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from '@angular/forms'; \nimport { AppComponent } from './app.component';\nimport { DataService } from './shared/dataService';\r\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { map } from \"rxjs/operators\"\r\n@Injectable()\r\nexport class DataService {\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n  public products = [];\r\n  loadProducts() {\r\n    return this.http.get(\"/api/cities/users\")\r\n      .pipe(\r\n        map((data: any[]) => {\r\n          this.products = data;\r\n          return true;\r\n        }));\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}